import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;


public class CommandOutputStreamReader extends Thread 
{
	
	
	//This is the input stream provided by the OSCommandExecutor that will contain the 
	//standard output and standard error generated by the running the OS command.
	InputStream processOutputStream;
	
	//I plug the process's output stream into this buffered reader, so I can log the data
	//for future use
	BufferedReader bufferedReader;
	
	//I use this stringbuilder to contain the total standard output generated output, because it
	//can continuously build a string as output is generated.
	StringBuilder processStandardOutput;

	
	
	
	public CommandOutputStreamReader( InputStream is )
	{
		this.processOutputStream = is;
		this.bufferedReader = new BufferedReader( new InputStreamReader( processOutputStream ) );
		this.processStandardOutput = new StringBuilder();
	}
	
	
	
	
	public void run()
	{
		String currentLine = new String();
		
		try 
		{
			while( ( currentLine = bufferedReader.readLine() ) != null )
			{
				processStandardOutput.append( currentLine );
				processStandardOutput.append( "\n" );
			}
			
			bufferedReader.close();
		} 
		
		catch ( IOException e ) 
		{
			System.out.println( "IO Error encountered in thread reading from the process's standard output.\n" );
			e.printStackTrace();
			this.stop();
		}
	}
	
	
	
	public String getProcessOutput()
	{
		return processStandardOutput.toString();
	}

	

}
